---
/**
 * ヘッダーコンポーネント。
 */
interface MenuItem {
  link: string;
  txt: string;
  blank?: boolean;
  anchor?: boolean;
  child?: MenuItem[];
}

interface Props {
  /**
   * 現在のページのスラッグ。トップページかどうかを判別するために使用されます。
   */
  slug: string;
  /**
   * サイトの名前。ロゴのalt属性として使用されます。
   */
  siteName: string;
  /**
   * グローバルナビゲーションのメニュー項目を定義する配列。
   */
  menu: MenuItem[];
  /**
   * サイトのドメイン名。アンカーリンク (`anchor: true`) の場合にURLを生成するために `Gnavi` コンポーネントへ渡されます。
   */
  domain: string;
}

const { slug, siteName, menu, domain } = Astro.props;
---

<header class="l_header">
  <div class="contentInner">
    <div class="header-inner">
      <!-- サイトロゴ -->
      {
        slug === "top" ? (
          <h1 class="header-logo">
            <a href="/" class="logo-link">
              <span class="logo-text">{siteName}</span>
            </a>
          </h1>
        ) : (
          <div class="header-logo">
            <a href="/" class="logo-link">
              <span class="logo-text">{siteName}</span>
            </a>
          </div>
        )
      }

      <!-- グローバルナビゲーション -->
      <nav class="header-nav">
        <h2 class="txtHidden">グローバルメニュー</h2>
        <ul class="nav-list">
          {
            menu.map((item) => (
              <li class="nav-item">
                <a
                  href={item.link}
                  class={`nav-link ${slug === "sample" && item.link === "/" ? "is-current" : ""}`}
                  target={item.blank ? "_blank" : undefined}
                  rel={item.blank ? "noopener noreferrer" : undefined}
                >
                  {item.txt}
                </a>
              </li>
            ))
          }
        </ul>
      </nav>

      <!-- モバイルメニューボタン -->
      <button class="header-menu-btn" type="button" aria-label="メニューを開く">
        <span class="menu-btn-line"></span>
        <span class="menu-btn-line"></span>
        <span class="menu-btn-line"></span>
      </button>
    </div>
  </div>
</header>
